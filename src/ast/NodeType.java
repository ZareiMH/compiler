package ast;

/**
 * An enum to declare type of an AST node
 */
public enum NodeType {
    ARGUMENTS,
    ASSIGN,
    BLOCK,

    /*Mathematics operations*/
    ADDITION,
    SUBTRACTION,
    MULTIPLICATION,
    DIVISION,
    MOD,
    AREHTMATIC_AND,
    AREHTMATIC_OR,
    XOR,
    POST_DECREMENT,
    POST_INCREMENT,
    PRE_INCREMENT,
    PRE_DECREMENT,
    UNARY_MINUS,
    UNARY_PLUS,
    /*Condition operations*/
    LESS_THAN,
    LESS_THAN_OR_EQUAL,
    GREATER_THAN,
    GREATER_THAN_OR_EQUAL,
    EQUAL,
    NOT_EQUAL,
    /*Logical operations*/
    BOOLEAN_AND,
    BOOLEAN_NOT,
    BOOLEAN_OR,
    /*Literals*/
    BOOLEAN_LITERAL,
    CHAR_LITERAL,
    INTEGER_LITERAL,
    NULL_LITERAL,
    FLOAT_LITERAL,
    STRING_LITERAL,
    LONG_LITERAL,
    /*Types*/
    BOOLEAN_TYPE,
    DOUBLE_TYPE,
    CHAR_TYPE,
    INT_TYPE,

    CAST,
    CLASS,
    CLASS_BODY,
    COMPILATION_UNIT,
    DECLARATIONS,
    EMPTY_STATEMENT,
    EXPRESSION_STATEMENT,
    FIELD_DECLARATION,
    IDENTIFIER,
    IF_STATEMENT,
    LOCAL_VAR_DECLARATION,
    METHOD_ACCESS,
    METHOD_DECLARATION,
    PARAMETER,
    PARAMETERS,

    RETURN_STATEMENT,

    VAR_USE,
    VARIABLE_DECLARATION,
    VARIABLE_DECLARATIONS,
    VOID,
    WHILE_STATEMENT
}
