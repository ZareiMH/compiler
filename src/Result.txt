declare i32 @fun(i32 %a,float %b) {
entry:
	%c = alloca float, align 4
	%f = alloca float, align 4
	%d = alloca i32, align 4
	%0 = load float* %f, align 4
	%0 = 4
	%1 = load i32* %d, align 4
	%2 = mul i32 1, 2
	%3 = load float* %b, align 4
	%4 = fadd float %2, %3
	%5 = srem i32 12, 3
	%6 = call i32 @fun(i32 %4,float %5)
	%1 = %6
	%7 = add i32 2, 2
	ret i32 %7
}
declare i32 @fun(float %y) {
entry:
}
define i32 @main() {
entry:
	%e = alloca i32, align 4
	%j = alloca i32, align 4
	%8 = load i32* %e, align 4
	%9 = load i32* %e, align 4
	call i32 @fun(i32 %8,float %9)
	call i32 @fun()
}
declare i32 @fun() {
entry:
	%g = alloca i32, align 4
	%h = alloca i32, align 4
	%10 = load i32* %g, align 4
	%11 = load i32* %h, align 4
	call i32 @fun(i32 %10,float %11)
	%12 = load i32* %g, align 4
	%12 = 5
	%13 = load i32* %g, align 4
	ret i32 %13
}
